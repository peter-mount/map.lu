# This yaml file contains the table definitions used to create the various tables within the schema.
# We use this as most of the SQL is identical so adding/removing columns is now easy & less prone to errors.

# Administration boundaries
country:
  description: The country, e.g. United Kingdom
  category: administrative
  type: polygon
  columns:
    - name
    - uppername = upper(name)
  where: |
    boundary='administrative'
    AND admin_level='2'
  index:
    - name
    - uppername

state:
  description: The state, e.g. England
  category: administrative
  type: polygon
  columns:
    - name
    - uppername = upper(name)
  where: |
    boundary='administrative'
    AND admin_level='4'
  index:
    - name
    - uppername

region:
  description: The region, e.g. South East
  category: administrative
  type: polygon
  columns:
    - name
    - uppername = upper(name)
  where: |
    boundary='administrative'
    AND admin_level='5'
  index:
    - name
    - uppername

county:
  description: The county, e.g. Kent
  category: administrative
  type: polygon
  columns:
    - name
    - uppername = upper(name)
  where: |
    boundary='administrative'
    AND admin_level='6'
  index:
    - name
    - uppername

district:
  category: administrative
  type: polygon
  columns:
    - name
    - uppername = upper(name)
  where: |
    boundary='administrative'
    AND admin_level='9'
  index:
    - name
    - uppername

subdistrict:
  category: administrative
  type: polygon
  columns:
    - name
    - uppername = upper(name)
  where: |
    boundary='administrative'
    AND admin_level='10'
  index:
    - name
    - uppername

# Coastlines & water features
coastline_poly:
  description: |-
    Coast line data - this is for polygons.

    Coastline data is normally excluded from osm2pgsql imports
    unless the --keep-coastlines flag is used.
  category: coastline
  type: polygon
  where: |-
    "natural" = 'coastline'

coastline_line:
  description: |-
    Coast line data - this is for lines.

    Coastline data is normally excluded from osm2pgsql imports
    unless the --keep-coastlines flag is used.
  category: coastline
  type: line
  where: |-
    "natural" = 'coastline'

lakes:
  description: |-
    Lates - water features that are not rivers
  category: water
  type: polygon
  columns:
    - name
    - way_area real
    - z_order integer
  where: |
    "natural" = 'water'
    AND (
      water IS NULL
      OR water IS NOT NULL AND water <> 'river'
    )
  index:
    - name

water:
  description: |-
    water areas that are not lakes or river banks
  category: water
  type: polygon
  columns:
    - name
    - z_order integer
  where: |
    "natural" = 'water'
    OR water IS NOT NULL
    OR waterway ~~ '%riverbank%'
  index:
    - name

waterway:
  description: |-
    waterway - linear water features like rivers, streams, drains
  category: water
  type: line
  columns:
    - name
    - waterway
    - z_order integer
  where: |
    waterway IN (
      'canal',
      'drain',
      'river',
      'stream',
      'waterfall',
      'yes'
    )
  index:
    - name
    - waterway
    - name, waterway

# Amenities
amenity:
  description: Amenity areas like schools, car parks, graveyards
  category: habitation
  type: polygon
  columns:
    - amenity
    - z_order integer
  where: |
    amenity IS NOT NULL
    AND building IS NULL
  index:
    - amenity

# Buildings
buildings:
  description: Buildings
  category: habitation
  type: polygon
  columns:
    - name
    - housename = "addr:housename"
    - housenumber = "addr:housenumber"
    - building
    - amenity
    - historic
    - operator
    - z_order integer
  where: building IS NOT NULL
  index:
    - name
    - housename
    - building
    - amenity
    - historic

residential:
  description: Residential areas
  category: habitation
  type: polygon
  columns:
    - name
  where: landuse = 'residential'
  index:
    - name

# Forests, parks etc
parkland:
  description: Parks, moorland, orchards and vineyards
  category: landscape
  type: polygon
  columns:
    - name
    - landuse
    - leisure
    - z_order integer
  where: |-
    landuse ILIKE '%grass%'
    OR landuse ILIKE '%moor%'
    OR landuse ILIKE '%park%'
    OR landuse ILIKE '%orchard%'
    OR landuse ILIKE '%vine%'
    OR landuse IN (
      'garden', 'Garden',
      'gra', 'grasas',
      'greenfield',
      'meadow',
      'meadow;grass',
      'plant_nursery',
      'plants',
      'recreation_ground',
      'village_green',
      'vineyard'
    )
    OR leisure ILIKE '%park%'
    OR leisure ILIKE '%geass%'
    OR leisure ILIKE '%grass%'
    OR leisure IN (
      'nature_reserve',
      'garden',
      'golf_course',
      'horse_riding',
      'stadium'
    )
    -- Might move to another feature
    OR leisure ILIKE '%beer%'
    OR leisure ILIKE '%picnic%'
    OR leisure ILIKE '%pitch%'
    OR leisure ILIKE '%playground%'
    OR leisure ILIKE '%playing%'
    OR leisure ILIKE '%pub%gard%'
    OR leisure ILIKE '%stadium%'
  index:
    - name
    - landuse
    - leisure

forestwoodland:
  description: Forests & Woodland
  category: landscape
  type: polygon
  columns:
    - name
    - landuse
    - "\"natural\""
    - z_order integer
  where: |
    leisure ILIKE '%wood%'
    OR leisure ILIKE '%forest%'
    OR "natural" ILIKE '%wood%'
    OR "natural" ILIKE '%forest%'
  index:
    - name
    - landuse

# Roads
minor_roads:
  description: |-
    Minor roads
    This contains roads that are not main, trunk or motorways
  category: roads
  type: line
  columns:
    - name
    - bridge
    - tunnel
    - z_order integer
  where: |
    highway IS NOT NULL
    AND (railway IS NULL OR railway = 'no')
    AND highway NOT IN (
      'motorway', 'motorway_link',
      'trunk', 'trunk_link',
      'primary', 'primary_link',
      'secondary', 'secondary_link',
      'road',
      'tertiary', 'tertiary_link',
      'steps',
      'footway', 'path', 'pedestrian', 'walkway',
      'service',
      'track'
    )
  index:
    - name
    - bridge
    - tunnel

roads:
  description: |-
    Main roads
    Contains roads that are not minor, trunk or motorways
  category: roads
  type: line
  columns:
    - name
    - bridge
    - tunnel
    - z_order integer
  where: |
    highway IN (
      'trunk_link',
      'primary_link',
      'secondary', 'secondary_link',
      'road',
      'tertiary', 'tertiary_link'
    )
  index:
    - name
    - bridge
    - tunnel

trunk_primary:
  description: |-
    Trunk roads
    Contains roads that are not minor, main or motorways
  category: roads
  type: line
  columns:
    - name
    - bridge
    - tunnel
    - z_order integer
  where: |
    highway IN (
      'motorway_link',
      'trunk',
      'primary'
    )
  index:
    - name
    - bridge
    - tunnel

motorway:
  description: |-
    Motorways
    Contains roads that are not minor, main or trunk roads
  category: roads
  type: line
  columns:
    - name
    - bridge
    - tunnel
    - z_order integer
  where: highway = 'motorway'
  index:
    - name
    - bridge
    - tunnel

pedestrian:
  description: |-
    Pedestrian walk ways
    Contains footpaths, pedestrian walkways, service roads and tracks
  category: roads
  type: line
  columns:
    - name
    - highway
    - bridge
    - tunnel
    - z_order integer
  where: |
    highway IN (
      'footway',
      'path',
      'pedestrian',
      'service',
      'steps',
      'track',
      'walkway'
    )
  index:
    - name
    - bridge
    - tunnel
